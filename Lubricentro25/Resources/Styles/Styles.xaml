<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:c="clr-namespace:Lubricentro25.Controls"
    xmlns:data="clr-namespace:Lubricentro25.Models"
    xmlns:mct="clr-namespace:CommunityToolkit.Maui.Views;assembly=CommunityToolkit.Maui">


    <Style x:Key="BasePopUp" TargetType="mct:Popup">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource BackgroundLight}, Dark={StaticResource BackgroundDark}}" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="VerticalOptions" Value="Start" />
        <Setter Property="CanBeDismissedByTappingOutsideOfPopup" Value="True" />
        <Setter Property="Size" Value="500,600" />
    </Style>

    <Style x:Key="PopUpBody" TargetType="Border">
        <Setter Property="Padding" Value="15" />
        <Setter Property="StrokeShape" Value="RoundRectangle 20" />
        <Setter Property="Shadow">
            <Shadow Brush="{AppThemeBinding Light=Black, Dark={StaticResource SecondaryHueDark}}" />
        </Setter>
    </Style>

    <Style x:Key="UppercaseEntry" TargetType="Entry">
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="TextTransform" Value="Uppercase" />
    </Style>

    <Style x:Key="CardLabel" TargetType="Label">
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="FontSize" Value="Caption" />
        <Setter Property="LineBreakMode" Value="TailTruncation" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
    </Style>

    <Style TargetType="Border">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundLight}, Dark={StaticResource BackgroundDark}}" />
    </Style>

    <Style TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource TertiaryBackgroundLight}, Dark={StaticResource TertiaryBackgroundDark}}" />
    </Style>
    <Style x:Key="SearchBarContainer" TargetType="Border">
        <Setter Property="WidthRequest" Value="230" />
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="Padding" Value="15" />
    </Style>

    <Style TargetType="SearchBar">
        <Setter Property="WidthRequest" Value="200" />
    </Style>

    <Style x:Key="CollectionViewContariner" TargetType="Border">
        <Setter Property="Padding" Value="20" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource SecondaryBackgroundLight}, Dark={StaticResource SecondaryBackgroundDark}}" />
        <Setter Property="Stroke" Value="Transparent" />
        <Setter Property="StrokeShape" Value="RoundRectangle 40" />
    </Style>

    <Style TargetType="CollectionView">
        <Setter Property="SelectionMode" Value="Single" />
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="ProgressColor" Value="{AppThemeBinding Light={StaticResource MarkerLight}, Dark={StaticResource MarkerDark}}" />
    </Style>

    <Style TargetType="Label">
        <Setter Property="VerticalOptions" Value="Center" />
    </Style>

    <Style x:Key="Subtitle" TargetType="Label">
        <Setter Property="FontSize" Value="Subtitle" />
        <Setter Property="Margin" Value="0,10,0,10" />
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>

    <Style ApplyToDerivedTypes="True" TargetType="Shell">
        <Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryHueLight}, Dark={StaticResource PrimaryHueDark}}" />
        <Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundLight}, Dark={StaticResource BackgroundDark}}" />
        <Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource BackgroundLight}, Dark={StaticResource BackgroundDark}}" />
    </Style>


    <Style ApplyToDerivedTypes="True" TargetType="ContentPage">
        <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource BackgroundLight}, Dark={StaticResource BackgroundDark}}" />
    </Style>

    <Style TargetType="Button">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ForegroundDark}, Dark={StaticResource ForegroundLight}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryHueLight}, Dark={StaticResource PrimaryHueDark}}" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="14,10" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="0.8" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ForegroundLight}, Dark={StaticResource ForegroundDark}}" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource SecondaryForegroundLight}, Dark={StaticResource SecondaryForegroundDark}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="PointerOver" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="WarningButton" TargetType="Button">
        <Setter Property="BackgroundColor" Value="{StaticResource Warning}" />
    </Style>

    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontFamily" Value="GoogleFont" />
        <Setter Property="FontSize" Value="Subtitle" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ForegroundLight}, Dark={StaticResource ForegroundDark}}" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="SecondaryButton" TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource MarkerLight}, Dark={StaticResource MarkerDark}}" />
    </Style>

    <Style x:Key="HeaderUnderline" TargetType="BoxView">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource MarkerLight}, Dark={StaticResource MarkerDark}}" />
        <Setter Property="HeightRequest" Value="2" />
    </Style>

    <Style TargetType="c:HyperLink">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryHueLight}, Dark={StaticResource PrimaryHueDark}}" />
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>

    <!--  VALIDATIONS  -->

    <Style x:Key="InvalidEntry" TargetType="Entry">
        <Setter Property="TextColor" Value="Red" />
    </Style>
</ResourceDictionary>
