<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:c="clr-namespace:Lubricentro25.Controls"
    xmlns:mct="clr-namespace:CommunityToolkit.Maui.Views;assembly=CommunityToolkit.Maui">

    <Style ApplyToDerivedTypes="True" TargetType="Shell">
        <Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryHueLight}, Dark={StaticResource PrimaryHueDark}}" />
        <Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundLight}, Dark={StaticResource BackgroundDark}}" />
        <Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource BackgroundLight}, Dark={StaticResource BackgroundDark}}" />
    </Style>


    <Style ApplyToDerivedTypes="True" TargetType="ContentPage">
        <Setter Property="Background" Value="{AppThemeBinding Light={StaticResource BackgroundLight}, Dark={StaticResource BackgroundDark}}" />
    </Style>
    <Style TargetType="Border">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundLight}, Dark={StaticResource BackgroundDark}}" />
    </Style>

    <Style TargetType="Button">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ForegroundDark}, Dark={StaticResource ForegroundDark}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryHueLight}, Dark={StaticResource PrimaryHueDark}}" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="14,10" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource ForegroundLight}, Dark={StaticResource ForegroundDark}}" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource SecondaryForegroundLight}, Dark={StaticResource SecondaryForegroundDark}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="PointerOver" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="WarningButton" TargetType="Button">
        <Setter Property="BackgroundColor" Value="{StaticResource Warning}" />
    </Style>

    <Style x:Key="SecondaryButton" TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource MarkerLight}, Dark={StaticResource MarkerDark}}" />
    </Style>
    <Style TargetType="c:HyperLink">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryHueLight}, Dark={StaticResource PrimaryHueDark}}" />
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>

    <Style x:Key="DefaultPopUp" TargetType="{x:Type mct:Popup}">
        <Setter Property="Size" Value="100,200" />
        <Setter Property="Color" Value="Green" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="VerticalOptions" Value="Start" />
        <Setter Property="CanBeDismissedByTappingOutsideOfPopup" Value="True" />
    </Style>
</ResourceDictionary>
